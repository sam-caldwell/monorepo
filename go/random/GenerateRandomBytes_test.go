package random

import (
	"bytes"
	"crypto/rand"
	"testing"
)

func TestGenerateRandomBytes(t *testing.T) {
	// Test cases
	tests := []struct {
		length int
	}{
		{length: 10},
		{length: 20},
		{length: 30},
	}

	for _, test := range tests {
		t.Logf("Testing with length: %d", test.length)

		randomBytes, err := GenerateRandomBytes(test.length)

		// Check for error
		if err != nil {
			t.Fatalf("Error generating random bytes: %v", err)
		}

		// Check if the length matches
		if len(randomBytes) != test.length {
			t.Fatalf("Generated bytes length mismatch. Expected: %d, Got: %d", test.length, len(randomBytes))
		}

		// Check if the content is truly random
		referenceBytes := make([]byte, test.length)
		_, err = rand.Read(referenceBytes)
		if err != nil {
			t.Fatalf("Error generating reference random bytes: %v", err)
		}

		if bytes.Equal(randomBytes, referenceBytes) {
			t.Fatalf("Generated bytes are not random")
		}
	}
}
